package prj5;

/**
 * Virginia Tech Honor Code Pledge:
 * 
 * As a Hokie, I will conduct myself with honor and integrity
 * at all times.
 * I will not lie, cheat, or steal, nor will I accept the actions of
 * those who do.
 * --Emily Kroliczak, Sean Stolburg, Zhengxiao Sun
 */

/**
 * Tests all of the methods in the StateData class to
 * ensure that they run and perform as expected
 * 
 * @author Emily Kroliczak, Sean Stolburg, Zhengxiao Sun
 * @version 04.21.2021
 */
public class StateDataTest extends student.TestCase {

    private StateData virginia;

    /**
     * Sets up each test method before it runs
     */
    public void setUp() {

        virginia = new StateData("virginia", 5000, 5000, 5000, 5000, 5000, 1000,
            1500, 2000, 2500, 3000);

    }


    /**
     * Tests getName() to ensure it returns the correct name of this StateData
     * object
     */
    public void testGetName() {

        assertEquals("virginia", virginia.getName());
    }


    /**
     * Tests getRaces() to ensure it returns the correct LinkedLisr of this
     * StateData object
     */
    public void testGetRaces() {

        LinkedList<Race> listOfRaces = virginia.getLinkedList();

        assertEquals("white: 5000 cases, 20.0% CFR\n"
            + "black: 5000 cases, 30.0% CFR\n"
            + "latinx: 5000 cases, 40.0% CFR\n"
            + "asian: 5000 cases, 50.0% CFR\n"
            + "other: 5000 cases, 60.0% CFR", listOfRaces.toString());
    }


    /**
     * Tests toString() method to ensure it returns the correct string
     * representation of thus StateData object
     */
    public void testToString() {

        assertEquals("virginia\n"
            + "white: 5000 cases, 20.0% CFR\n"
            + "black: 5000 cases, 30.0% CFR\n"
            + "latinx: 5000 cases, 40.0% CFR\n"
            + "asian: 5000 cases, 50.0% CFR\n"
            + "other: 5000 cases, 60.0% CFR", virginia
                .toString());
    }


    /**
     * Tests sortByAlpha() to ensure it sorts the LinkedList of Race objects
     * by alphabetically order
     */
    public void testSortByAplha() {

        virginia.sortByAlphabet();

        assertEquals("virginia\n"
            + "asian: 5000 cases, 50.0% CFR\n"
            + "black: 5000 cases, 30.0% CFR\n"
            + "latinx: 5000 cases, 40.0% CFR\n"
            + "other: 5000 cases, 60.0% CFR\n"
            + "white: 5000 cases, 20.0% CFR", virginia
                .toString());
    }


    /**
     * Tests sortByCaseFatalityRatio() to ensure it sorts the LinkedList of Race
     * objects by CFR
     */
    public void testSortByCaseFatalityRatio() {

        virginia.sortByCaseFatalityRatio();

        assertEquals(
            "virginia\n"
            + "other: 5000 cases, 60.0% CFR\n"
            + "asian: 5000 cases, 50.0% CFR\n"
            + "latinx: 5000 cases, 40.0% CFR\n"
            + "black: 5000 cases, 30.0% CFR\n"
            + "white: 5000 cases, 20.0% CFR",
            virginia.toString());
    }
}
